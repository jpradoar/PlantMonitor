version: '2'
services:
#----------------- MQTT ----------------------------------
  mosquitto:
    image: eclipse-mosquitto:1.5.8
    container_name: mosquitto
    volumes:
      - ./srv/mosquitto/:/etc/mosquitto/:rw
    ports:
      - "1883:1883"
    networks:
      - fullinfra
#----------------- INFLUXDB -----------------------------
  influxdb:
    image: influxdb:1.7.10
    container_name: influxdb
    ports:
      - "8083"
      - "8086"
      - "8090"
    volumes:
     - ./srv/influxdb/data:/var/lib/influxdb:rw
    environment:
      - INFLUXDB_DATA_ENGINE=tsm1
      - INFLUXDB_REPORTING_DISABLED=false
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin
      - INFLUXDB_HTTP_AUTH_ENABLED=false
      - INFLUXDB_DB=IoT
      #- INFLUXDB_DB=IoT;CREATE DATABASE logs; # Create two DBs
    networks:
      - fullinfra
# para ver las bases 
# curl -G "http://localhost:8086/query?pretty=true" --data-urlencode "q=show databases"

# para ver la info (la base (db=IoT)  debe ser la declarada en INFLUX_DB=IoT   
# curl -sG "http://localhost:8086/query?db=IoT" --data-urlencode "q=show measurements"|jq -r        

# para ver la data 
# curl -sG "http://localhost:8086/query?db=IoT" --data-urlencode "q=select * from IoT"|jq -r        
        
#---------------- SHOW DATA AND TENDENCE ---------------
  grafana:
    image: grafana/grafana:6.7.1
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - influxdb
    volumes:
      - ./grafana:/var/lib/grafana/plugins:rw # :ro
      - ./grafana/provisioning/:/etc/grafana/provisioning/:ro
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_GRAFANA_PLUGIN_LIST="pierosavi-imageit-panel"
    networks:
      - fullinfra
#---------------------- API ------------------------------
  api:
    build:
      context: API/
    image: api
    container_name: api
    ports:
      - "8080:8080"
    depends_on:
      - influxdb
    restart: 'always'
    networks:
      - fullinfra
#---------------------- SUBSCRIBER ------------------------------
  subscriber:
    build:
      context: subscriber/
    image: subscriber
    container_name: subscriber
    depends_on:
      - mosquitto
      - influxdb
    restart: 'always'
    networks:
      - fullinfra
#---------------------- MYSQL ------------------------------
  mysql:
    image: mariadb:10.1.19
    container_name: mysql
    ports:
      - "3306"
    restart: 'always'
    volumes: 
      - ./webserver/code/dump.sql:/docker-entrypoint-initdb.d/dump.sql    
    environment:
      MYSQL_DATABASE: 'test'
      MYSQL_USER: 'admin'
      MYSQL_PASSWORD: 'admin'
      MYSQL_ROOT_PASSWORD: 'admin'
    networks:
      - fullinfra   
#---------------------- PHP ------------------------------
  php:
    build:
      context: php/
    container_name: php  
    volumes:
      - ./webserver/code/:/usr/share/nginx/html:ro
    depends_on:
      - mysql      
    restart: 'always'
    networks:
      - fullinfra        
#---------------------- HTTP ------------------------------
  nginx:
    image: nginx
    container_name: nginx
    ports:
      - "80:80"
    depends_on:
      - mysql
      - php
    volumes:
      - ./webserver/code/:/usr/share/nginx/html:ro
      - ./webserver/conf/site.conf:/etc/nginx/conf.d/default.conf:ro
      - ./webserver/conf/htpasswd:/.htpasswd:ro      
    restart: 'always'
    networks:
      - fullinfra         
#-------------------- NETWORK ----------------------------
networks:
  fullinfra:
    driver: bridge
